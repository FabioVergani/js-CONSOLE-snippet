//#test:
console.clear();

//false:
[
-1E3,//-1000
-2.1,//-2
-2,//-2
-1,//-1
-.9,//0
-.6,//0
-.5,//0
-.4,//0
-.1,//0
0,//0
Number(),//0
.1,//0
.4,//0
.5,//0
.6,//0
.9,//0
1,//1
2,//2
2.1,//2.1
Number(666),//666
1E3//1000
].forEach(x=>console.log(x,'isNaN →',isNaN(x)));

//NaN
[
null,//false
undefined,//false
'','\r','\n','\t',' ','   ',//false
'x',' x ','  x  ',//true
[],[''],['\r'],['\n'],['\t'],[' '],//false
[' x '],//true
{},{a:1},{a:1,b:2},//true
Object,//true
-Infinity,//false
Infinity//false
].forEach(x=>console.log(x,'isNaN →',isNaN(x)));

const MaxSafeInteger=Number.MAX_SAFE_INTEGER;
[
Math.PI,//false
-MaxSafeInteger,//false
-MaxSafeInteger-1,//false
MaxSafeInteger,//false
MaxSafeInteger+1//false
].forEach(x=>console.log(x,'isNaN →',isNaN(x)));

//Cannot convert object to primitive value
isNaN(Object.create(null))
